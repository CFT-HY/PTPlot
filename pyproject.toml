[build-system]
requires = [
    "setuptools",
    "wheel"
]
build-backend = "setuptools.build_meta"

[project]
name = "ptplot_gw"
version = "1.1.0"
description = "PTPlot tool for plotting phase transitions"
readme = "README.md"
# license = "MIT"
keywords = [
    "cosmology",
    "phase transitions",
    "gravitational waves"
]
authors = [
    {name = "David Weir", email = "david.weir@helsinki.fi"}
]
maintainers = [
    {name = "David Weir", email = "david.weir@helsinki.fi"}
]
classifiers = [
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 5.1",
    "Framework :: Matplotlib",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Visualization",
]
# Keep this up to date with requirements.txt
dependencies = [
    "django >= 5.1.5",
    "dulwich >= 0.22.7",
    "gunicorn >= 23.0.0",
    "matplotlib >= 3.10.0",
    "numpy >= 2.2.1",
    "scipy >= 1.15.1",
]
requires-python = ">= 3.10"
# dynamic = ["version"]

[project.optional-dependencies]
pttools = [
    "pttools-gw[numbalsoda,performance]"
]

[project.urls]
homepage = "https://www.ptplot.org"
repository = "https://github.com/CFT-HY/PTPlot"

[tool.coverage.run]
branch = true
command_line = "manage.py test --noinput --parallel"
concurrency = [
    "thread",
    "multiprocessing"
]
source = ["."]
omit = [
    "**/envs/*",
    "**/venv/*"
]
parallel = true
plugins = ["django_coverage_plugin"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:"
]
show_missing = true

[tool.pytest.ini_options]
# On clusters "--numprocesses=auto" creates processes according to the total number of CPU cores
# instead of the number of cores available to the job.
# Therefore, it may be wise to set the number of processes manually.
addopts = "--alluredir=test-results/allure --cov=. --cov-report=html --cov-report=term --cov-report=term-missing --cov-report=xml --dist=loadscope --html=test-results/html/test-report.html --numprocesses=auto"
testpaths = [
    "tests"
]

[tool.setuptools.packages.find]
include = [
    # "ptplot",
    "ptplot.management*",
    "ptplot.migrations*",
    "ptplot.science*",
    "ptplot.static*",
    "ptplot.templates*",
]
exclude = [
    "ptplot.tests",
    "ptplot_site"
]
